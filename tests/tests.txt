1. Initial testing

Tests covering simple functionality needed for later tests

1.1

PRINT 1
Result: 1

1.2

PRINT 2+3
Result: 5

1.3

PRINT 1+2*3
Result: 7

1.4

PRINT (1+2)*3
Result: 6

1.5

LET A=123
PRINT A
Result: 123

1.6

1 PRINT 2
3 PRINT 4
LIST
RUN
Result: Correct listing, then:
2
4

1.7

1 PRINT 2
3 PRINT 4
1
LIST
RUN
Result: Line 3 listed, then: 4

1.8

1 PRINT 2
3 PRINT 4
2 PRINT 5
LIST
RUN
Result: Lines listed in order, then:
2
5
4


2. Expression tests

3. LET and INPUT tests

3.1

10 LET A=1234
20 PRINT A
Result: 1234

3.2

10 LET Z=-30000
20 PRINT Z
Result: -30000

3.3

10 INPUT A
20 PRINT A
Result: The number that was input

4. IF and GOTO tests

4.1

10 LET A=0
20 PRINT A
30 LET A=A+1
40 IF A<=5 GOTO 20
Result: Integers 1 to 5 in ascending order

5. GOSUB and RETURN tests

5.1

10 LET A=5
20 GOSUB 100
30 LET A=500
40 GOSUB 100
50 END
100 PRINT A
110 RETURN
Result:
5
500

6. FOR and NEXT tests

6.1

10 FOR I=1 TO 5
20 PRINT I
30 NEXT
Result: Integers 1 to 5 listed in order

6.2

10 FOR I=1 TO 5 STEP 2
20 PRINT I
30 NEXT
Result: Integers 1,3,5

6.3

10 FOR I=-1 TO -5 STEP -1
20 PRINT I
30 NEXT
Result: Integers -1 to -5 in descending order

7. Array tests

7.1

10 FOR I=0 TO 100
20 LET @(I)=3*I-1
30 NEXT
40 FOR I=100 TO 0 STEP -1
50 PRINT @(I)
60 NEXT
Result: Integers from 299 to -1 descending in steps of 3

8. Function tests

8.1

PRINT RND(10)

9. Edge case tests

9.1

PRINT -32768
PRINT -1
PRINT 0
PRINT 1
PRINT 32767
Result: -32768,-1,0,1,32767

9.2

PRINT 32767+1
PRINT (-32767)-2
Result: -32768,32767

10. Syntax error tests

11. Run-time error tests

12. Simple programs

12.1 Introducing BASIC 1K

10 LET M=1
20 LET C=8080
25 LET V=26
26 LET L=-32767
27 LET U=32767
30 PRINT "BASIC ",M,"K is a BASIC interpreter for the Inter ",C,
40 PRINT "that fits in ",M,"K of ROM."
50 PRINT "It is a dialext of Tiny BASIC."
60 PRINT "It has ",V," integer variables (A-Z)."
70 PRINT "These can hold numbers between ",L," and ",U,"."
80 PRINT "It has a single array @ which uses all free memory."
90 PRINT "System variable ^ shows the first free memory address (which is ",^," for this program, so this program is ",1064-^," bytes long."


12.2 Number guessing

10 PRINT "Guess a number between 0 and 5" 
20 INPUT A 
30 LET B = RND ( 6 ) 
40 IF A = B GOTO 50 
45 PRINT "Wrong, it was " , B 
46 END 
50 PRINT "Correct!" 

12.3 REVERSE


10 PRINT "REVERSE"
30 PRINT "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
100 PRINT "REVERSE -- A GAME OF SKILL"
150 LET N=9
210 LET @(1)=RND(N)+1
220 FOR K=2 TO N
230 LET @(K)=RND(N)+1
235 LET D=0
240 FOR J=1 TO K-1
250 IF @(K)=@(J) LET D=1
260 NEXT
265 IF D=1 GOTO 230
270 NEXT
290 PRINT
300 PRINT "HERE WE GO ... THE LIST IS:"
310 LET T=0
320 GOSUB 610
330 PRINT "HOW MANY SHALL I REVERSE"
335 INPUT R
350 IF R=0 GOTO 520
360 IF R<=N GOTO 390
370 PRINT "OOPS! TOO MANY! I CAN REVERSE AT MOST ",N
380 GOTO 330
390 LET T=T+1
410 FOR K=1 TO R/2
420 LET Z=@(K)
430 LET @(K)=@(R-K+1)
440 LET @(R-K+1)=Z
450 NEXT
460 GOSUB 610
479 LET D=0
480 FOR K=1 TO N
490 IF @(K)<>K LET D=1
500 NEXT
505 IF D=1 GOTO 330
510 PRINT "YOU WON IT IN ",T," MOVES!!!"
520 PRINT
530 PRINT "TRY AGAIN (1=YES, 0=NO)"
535 INPUT A
550 IF A=1 GOTO 210
560 PRINT
565 PRINT "O.K. HOPE YOU HAD FUN!!"
570 GOTO 999
610 PRINT
620 FOR K=1 TO N
630 PRINT @(K), " ",
640 NEXT
650 PRINT
660 RETURN